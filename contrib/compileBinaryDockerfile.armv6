# (Cross-)builds a docker image for the RPI using ARMv6
# Build the docker image from the root of the project with the following command :
# $ docker build -t librespot-rpi -f contrib/<thisFile> .
# to get the compiled binary to your host, use:
# $ docker cp <containerid>:/build/arm-unknown-linux-gnueabihf/release/librespot .

FROM debian:stretch

RUN dpkg --add-architecture armhf
RUN apt-get update

RUN apt-get install -y curl git build-essential crossbuild-essential-armhf
RUN apt-get install -y libasound2-dev libasound2-dev:armhf
RUN apt-get install -y pkg-config

#taken from https://github.com/tiziano88/rust-raspberry-pi/blob/master/Dockerfile
ARG RASPBERRY_PI_TOOLS_COMMIT_ID=5caa7046982f0539cf5380f94da04b31129ed521
RUN curl -sL https://github.com/raspberrypi/tools/archive/$RASPBERRY_PI_TOOLS_COMMIT_ID.tar.gz \
    | tar xzf - -C /usr/local --strip-components=1 tools-${RASPBERRY_PI_TOOLS_COMMIT_ID}/arm-bcm2708

# Need to add both these to PATH.
ENV PATH=/usr/local/arm-bcm2708/arm-linux-gnueabihf/bin:$PATH
ENV PATH=/usr/local/arm-bcm2708/arm-linux-gnueabihf/libexec/gcc/arm-linux-gnueabihf/4.8.3:$PATH
#END: taken from https://github.com/tiziano88/rust-raspberry-pi/blob/master/Dockerfile

RUN curl https://sh.rustup.rs -sSf | sh -s -- -y
ENV PATH="/root/.cargo/bin/:${PATH}"
RUN rustup target add arm-unknown-linux-gnueabihf

RUN mkdir /.cargo && \
    echo '[target.arm-unknown-linux-gnueabihf]\nlinker = "arm-linux-gnueabihf-gcc"' >> /.cargo/config

RUN mkdir /build
ENV CARGO_TARGET_DIR /build
ENV CARGO_HOME /build/cache
ENV PKG_CONFIG_PATH /usr/lib/arm-linux-gnueabihf/pkgconfig/
ENV PKG_CONFIG_ALLOW_CROSS 1

ADD . /src
WORKDIR /src

RUN cargo build --release --target arm-unknown-linux-gnueabihf --no-default-features --features "alsa-backend"